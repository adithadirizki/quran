import axios from 'axios';
import Head from 'next/head';
import { useState } from 'react';

const Surah = (props) => {
  const { data } = props;
  const [tabActive, setTabActive] = useState('detail');

  /**
   * Search Surah
   *
   * @param {React.ChangeEvent<HTMLInputElement>} e
   */
  const onSearch = (e) => {
    const { value: search } = e.target;

    setDataFiltered(() => {
      const newData = data.filter((value, index) => {
        const regex = new RegExp(`${search}`, 'i');
        return regex.test(value.nama_latin) ?? regex.test(value.arti) ?? false;
      });

      return newData;
    });
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="p-4 md:p-8">
        <h1 className="text-center text-4xl font-bold">
          Surah <span className="text-blue-500">{data.nama_latin}</span> (
          {data.nama})
        </h1>

        <div className="flex justify-center my-4">
          <div className="bg-slate-500 text-white rounded-l-md py-2 px-3">
            Ayat ke
          </div>
          <input
            type="number"
            className="border-y-2 border-r-2 border-slate-300 rounded-y-lg rounded-r-lg focus:outline-blue-300 px-2 py-1"
            placeholder="Search..."
            onChange={onSearch}
          />
        </div>

        <section className="lg:w-5/6 mx-auto">
          <nav className="flex justify-center mb-6">
            <button
              className={`bg-blue-500 hover:bg-blue-400 text-white font-bold rounded-l-lg border-r border-blue-500 py-2 px-4 ${
                tabActive === 'detail' ? 'bg-blue-600' : null
              }`}
              onClick={() => setTabActive('detail')}
            >
              Info Selengkapnya
            </button>
            <button
              className={`bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 ${
                tabActive === 'ayat' ? 'bg-blue-600' : null
              }`}
              onClick={() => setTabActive('ayat')}
            >
              Ayat
            </button>
            <button
              className={`bg-blue-500 hover:bg-blue-400 text-white font-bold rounded-r-lg py-2 px-4 ${
                tabActive === 'tafsir' ? 'bg-blue-600' : null
              }`}
              onClick={() => setTabActive('tafsir')}
            >
              Tasfir
            </button>
          </nav>
          <>
            <div
              className={`grid gap-y-2 ${
                tabActive === 'detail' ? null : 'hidden'
              }`}
            >
              <div className="flex flex-col lg:flex-row gap-x-4">
                <label className="text-lg text-slate-500 lg:min-w-[10rem]">
                  Nama surah
                </label>
                <div>{data.nama_latin}</div>
              </div>
              <div className="flex flex-col lg:flex-row gap-x-4">
                <label className="text-lg text-slate-500 lg:min-w-[10rem]">
                  Arti
                </label>
                <div>{data.arti}</div>
              </div>
              <div className="flex flex-col lg:flex-row gap-x-4">
                <label className="text-lg text-slate-500 lg:min-w-[10rem]">
                  Turun di
                </label>
                <div className="first-letter:capitalize">
                  {data.tempat_turun}
                </div>
              </div>
              <div className="flex flex-col lg:flex-row gap-x-4">
                <label className="text-lg text-slate-500 lg:min-w-[10rem]">
                  Surah ke
                </label>
                <div>{data.nomor}</div>
              </div>
              <div className="flex flex-col lg:flex-row gap-x-4">
                <label className="text-lg text-slate-500 lg:min-w-[10rem]">
                  Jumlah ayat
                </label>
                <div>{data.jumlah_ayat} ayat</div>
              </div>
              <div className="flex flex-col lg:flex-row gap-x-4">
                <label className="text-lg text-slate-500 lg:min-w-[10rem] whitespace-pre-line">
                  Deskripsi
                </label>
                <div
                  className="max-w-2xl"
                  dangerouslySetInnerHTML={{ __html: data.deskripsi }}
                ></div>
              </div>
              <div className="flex flex-col lg:flex-row gap-x-4">
                <label className="text-lg text-slate-500 lg:min-w-[10rem]">
                  Audio
                </label>
                <audio controls>
                  <source src={data.audio} type="audio/mp3" />
                </audio>
              </div>
            </div>

            <div
              className={`grid gap-y-2 ${
                tabActive === 'ayat' ? null : 'hidden'
              }`}
            >
              {data.ayat.map((value, index) => {
                return (
                  <div key={index} id={`ayat${value.nomor}`} className="text-right mb-6">
                    <div className="text-3xl mb-2">
                      {value.ar}{' '}
                      <span className="text-lg text-red-500">
                        ({value.nomor})
                      </span>
                    </div>

                    <div
                      className="md:text-xl text-slate-500 text-left first-letter:capitalize"
                      dangerouslySetInnerHTML={{ __html: value.tr }}
                    ></div>

                    <div className="italic text-slate-400 text-left">
                      {value.idn}
                    </div>
                  </div>
                );
              })}
            </div>

            <div
              className={`grid gap-y-2 ${
                tabActive === 'tafsir' ? null : 'hidden'
              }`}
            >
              {data.tafsir.map((value, index) => {
                return (
                  <div key={index} className="mb-6">
                    <div className="text-lg text-red-500 mb-2">
                      Ayat ({value.ayat})
                    </div>

                    <p className="whitespace-pre-line">
                      {data.tafsir[index].tafsir}
                    </p>
                  </div>
                );
              })}
            </div>
          </>
        </section>
      </main>
    </>
  );
};

/**
 *
 * @param {import("next").GetServerSidePropsContext} context
 * @returns
 */
export const getServerSideProps = async (context) => {
  const { params } = context;

  const ayat = await axios.get(`https://equran.id/api/surat/${params.id}`, {
    responseType: 'json',
  });
  const tafsir = await axios.get(`https://equran.id/api/tafsir/${params.id}`, {
    responseType: 'json',
  });

  return {
    props: { data: { ...ayat.data, tafsir: tafsir.data.tafsir } },
  };
};

export default Surah;
